@model Reina.MacCredy.Models.Order
@using Reina.MacCredy.Extensions
@using Reina.MacCredy.Models

@{
    ViewData["Title"] = "Checkout";
}

<div class="container py-5">
    <div class="row mb-4">
        <div class="col-12">
            <h2 class="mb-1 fw-bold">Checkout</h2>
            <p class="text-muted">Complete your order details</p>
        </div>
    </div>

    @if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger rounded-3 shadow-sm">
            <ul class="mb-0">
                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                {
                    <li>@error.ErrorMessage</li>
                }
            </ul>
        </div>
    }

    <div class="row g-4">
        <div class="col-lg-8">
            <div class="card shadow-sm border-0 rounded-4 mb-4">
                <div class="card-body p-4">
                    <h4 class="mb-4 fw-bold">Order Information</h4>
                    <form action="/ShoppingCart/Checkout" method="post" id="checkoutForm">
                        <input type="hidden" name="UserId" value="@Model.UserId" />
                        @Html.AntiForgeryToken()

                        <div class="mb-4">
                            <div class="form-floating">
                                <input type="text" name="ShippingAddress" id="ShippingAddress"
                                    value="@Model.ShippingAddress" class="form-control" required />
                                <label for="ShippingAddress">Shipping Address</label>
                            </div>
                        </div>

                        <div class="mb-4">
                            <div class="form-floating">
                                <input asp-for="Email" class="form-control" id="Email" required />
                                <label asp-for="Email">Email</label>
                                <span asp-validation-for="Email" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="mb-4">
                            <div class="form-floating">
                                <textarea name="Notes" id="Notes" class="form-control" style="height: 100px">@Model.Notes</textarea>
                                <label for="Notes">Order Notes (Optional)</label>
                            </div>
                        </div>

                        <div class="mb-4">
                            <label class="form-label fw-medium mb-3">Payment Method</label>
                            <div class="payment-methods">
                                <div class="payment-method">
                                    <input class="payment-input" type="radio" name="PaymentMethod"
                                           value="CashOnDelivery" id="payment-cod" checked>
                                    <label for="payment-cod" class="payment-method-label">
                                        <i class="bi bi-cash-coin payment-icon"></i>
                                        <div class="payment-details">
                                            <span class="payment-title">Cash On Delivery</span>
                                            <span class="payment-subtitle">Pay when you receive your order</span>
                                        </div>
                                    </label>
                                </div>

                                <div class="payment-method">
                                    <input class="payment-input" type="radio" name="PaymentMethod"
                                           value="MoMo" id="payment-momo">
                                    <label for="payment-momo" class="payment-method-label">
                                        <i class="bi bi-wallet2 payment-icon"></i>
                                        <div class="payment-details">
                                            <span class="payment-title">MoMo E-Wallet</span>
                                            <span class="payment-subtitle">Pay via MoMo mobile wallet</span>
                                        </div>
                                    </label>
                                </div>

                                <div class="payment-method">
                                    <input class="payment-input" type="radio" name="PaymentMethod"
                                           value="VNPay" id="payment-vnpay">
                                    <label for="payment-vnpay" class="payment-method-label">
                                        <i class="bi bi-credit-card payment-icon"></i>
                                        <div class="payment-details">
                                            <span class="payment-title">VNPay</span>
                                            <span class="payment-subtitle">Pay via VNPay gateway</span>
                                        </div>
                                    </label>
                                </div>
                            </div>
                        </div>

                        <div class="d-flex gap-3 mt-5">
                            <a href="@Url.Action("Index", "ShoppingCart")" class="btn btn-outline-secondary px-4 py-2 d-flex align-items-center">
                                <i class="bi bi-arrow-left me-2"></i>Back to Cart
                            </a>
                            <button type="submit" class="btn btn-primary px-4 py-2 flex-grow-1 fw-medium" id="placeOrderBtn">
                                Place Order
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <div class="col-lg-4">
            <div class="card shadow-sm border-0 rounded-4 mb-4 sticky-lg-top" style="top: 20px;">
                <div class="card-header bg-light border-0 rounded-top-4 p-4">
                    <h4 class="mb-0 fw-bold">Order Summary</h4>
                </div>
                <div class="card-body p-4">
                    @{
                        var cart = Context.Session.GetObjectFromJson<ShoppingCart>("Cart");
                        if (cart != null && cart.Items.Any())
                        {
                            <div class="cart-items">
                                @foreach (var item in cart.Items)
                                {
                                    <div class="cart-item d-flex justify-content-between align-items-center mb-3">
                                        <div>
                                            <span class="fw-medium">@item.Name</span>
                                            <div class="text-muted small">
                                                Qty: @item.Quantity
                                            </div>
                                        </div>
                                        <span class="fw-medium">@((item.Price * item.Quantity).ToString("#,##0")) VND</span>
                                    </div>
                                }
                            </div>
                            <hr class="my-4">
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <span class="text-muted">Subtotal</span>
                                <span class="fw-medium">@cart.GetTotal().ToString("#,##0") VND</span>
                            </div>
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <span class="text-muted">Shipping</span>
                                <span class="fw-medium">Free</span>
                            </div>
                            <hr class="my-4">
                            <div class="d-flex justify-content-between align-items-center">
                                <span class="fs-5 fw-medium">Total</span>
                                <span class="fs-4 fw-bold">@cart.GetTotal().ToString("#,##0") VND</span>
                            </div>
                        }
                        else
                        {
                            <div class="text-center py-3">
                                <p class="mb-0">Your cart is empty</p>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<style>
.form-floating > .form-control {
    padding: 1rem 0.75rem;
    height: calc(3.5rem + 2px);
    line-height: 1.25;
}

.form-floating > label {
    padding: 1rem 0.75rem;
}

.form-floating > .form-control:focus {
    border-color: #86b7fe;
    box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
}

.form-floating > textarea.form-control {
    height: auto;
}

/* Payment Methods */
.payment-methods {
    display: flex;
    flex-direction: column;
    gap: 12px;
}

.payment-method {
    position: relative;
}

.payment-input {
    position: absolute;
    opacity: 0;
    width: 0;
    height: 0;
}

.payment-method-label {
    display: flex;
    align-items: center;
    padding: 16px;
    background-color: #f8f9fa;
    border: 1px solid #dee2e6;
    border-radius: 12px;
    cursor: pointer;
    transition: all 0.2s ease;
}

.payment-icon {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    background-color: rgba(13, 110, 253, 0.1);
    color: #0d6efd;
    border-radius: 50%;
    margin-right: 16px;
    font-size: 1.2rem;
}

.payment-details {
    flex-grow: 1;
}

.payment-title {
    display: block;
    font-weight: 600;
    margin-bottom: 4px;
}

.payment-subtitle {
    display: block;
    font-size: 0.875rem;
    color: #6c757d;
}

.payment-input:checked + .payment-method-label {
    border: 1px solid #0d6efd;
    background-color: rgba(13, 110, 253, 0.05);
}

.payment-input:focus + .payment-method-label {
    box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
}

/* Cart Items */
.cart-items {
    max-height: 250px;
    overflow-y: auto;
}

.cart-item {
    padding: 8px 0;
}

/* Button Styling */
.btn {
    border-radius: 8px;
    transition: all 0.2s ease;
}

.btn-primary {
    background-color: #0d6efd;
    border-color: #0d6efd;
}

.btn-primary:hover {
    background-color: #0b5ed7;
    border-color: #0a58ca;
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.btn-outline-secondary:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

/* Responsive adjustments */
@@media (max-width: 991.98px) {
    .sticky-lg-top {
        position: relative;
        top: 0 !important;
    }
}
</style>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        $(document).ready(function() {
            // Form submission
            $('#checkoutForm').submit(function(e) {
                const submitBtn = document.getElementById('placeOrderBtn');
                submitBtn.disabled = true;
                submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span> Processing...';
            });
        });
    </script>
}