@model ShoppingCart
@using Reina.MacCredy.Extensions

@{
    ViewData["Title"] = "Your Order";
}

<div class="container py-5">
    <div class="row mb-4">
        <div class="col-12">
            <h2 class="text-coffee mb-0">
                <i class="bi bi-basket"></i> Your Order
            </h2>
            <div class="mt-2">
                <div class="small text-muted">Review your items before checkout</div>
            </div>
        </div>
    </div>

    @if (Model.Items.Any())
    {
        <div class="card shadow-lg border-0 rounded-lg overflow-hidden mb-4">
            <div class="card-header bg-light py-3">
                <div class="row fw-bold text-coffee">
                    <div class="col-md-4">Menu Item</div>
                    <div class="col-md-2">Customization</div>
                    <div class="col-md-2 text-center">Quantity</div>
                    <div class="col-md-2 text-end">Price</div>
                    <div class="col-md-2 text-end">Subtotal</div>
                </div>
            </div>
            <div class="card-body p-0">
                @foreach (var item in Model.Items)
                {
                    <div class="row p-3 border-bottom align-items-center @(Model.Items.Last() == item ? "mb-0" : "")">
                        <div class="col-md-4 mb-3 mb-md-0">
                            <div class="d-flex align-items-center">
                                <div class="me-3">
                                    @if (!string.IsNullOrEmpty(item.ImageUrl))
                                    {
                                        <img src="@item.ImageUrl" alt="@item.Name" class="rounded" width="60" height="60" style="object-fit: cover;">
                                    }
                                    else
                                    {
                                        <div class="bg-light rounded d-flex align-items-center justify-content-center" style="width: 60px; height: 60px;">
                                            <i class="bi bi-cup-hot text-coffee fs-4"></i>
                                        </div>
                                    }
                                </div>
                                <div>
                                    <h6 class="mb-0 fw-bold">@item.Name</h6>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-2 mb-3 mb-md-0">
                            @if (!string.IsNullOrEmpty(item.SelectedOptions))
                            {
                                <div>
                                    @try
                                    {
                                        var options = System.Text.Json.JsonSerializer.Deserialize<List<object>>(item.SelectedOptions);
                                        var optionsContext = Context.RequestServices.GetRequiredService<ApplicationDbContext>();
                                        foreach (var optObj in options)
                                        {
                                            var obj = System.Text.Json.JsonSerializer.Deserialize<Dictionary<string, object>>(optObj.ToString());
                                            if (obj.TryGetValue("id", out var idValue))
                                            {
                                                int optionId = Convert.ToInt32(idValue.ToString());
                                                var option = optionsContext.ProductOptions.FirstOrDefault(o => o.Id == optionId);
                                                if (option != null)
                                                {
                                                    <div class="small text-muted">@option.OptionType: @option.Name</div>
                                                }
                                            }
                                        }
                                    }
                                    catch
                                    {
                                        <span class="small text-muted">Custom options</span>
                                    }
                                </div>
                            }
                            else
                            {
                                <span class="badge bg-light text-coffee">Standard</span>
                            }
                        </div>
                        <div class="col-md-2 text-center mb-3 mb-md-0">
                            <div class="quantity-control d-inline-flex border rounded">
                                <button type="button" class="btn btn-sm decrease-quantity" data-id="@item.ProductId"
                                        data-options="@item.SelectedOptions">
                                    <i class="bi bi-dash"></i>
                                </button>
                                <input type="text" class="form-control text-center border-0 item-quantity"
                                       value="@item.Quantity" min="1" max="10" style="width: 40px;"
                                       data-id="@item.ProductId" data-options="@item.SelectedOptions">
                                <button type="button" class="btn btn-sm increase-quantity" data-id="@item.ProductId"
                                        data-options="@item.SelectedOptions">
                                    <i class="bi bi-plus"></i>
                                </button>
                            </div>
                        </div>
                        <div class="col-md-2 text-end mb-3 mb-md-0">
                            <span class="fw-semibold">@item.Price.ToString("#,##0") VND</span>
                        </div>
                        <div class="col-md-2 d-flex justify-content-between justify-content-md-end align-items-center">
                            <span class="fw-bold text-coffee fs-5">@((item.Price * item.Quantity).ToString("#,##0")) VND</span>
                            <a asp-action="RemoveItem" asp-route-productId="@item.ProductId"
                               class="btn btn-sm text-danger ms-3" title="Remove item">
                                <i class="bi bi-trash"></i>
                            </a>
                        </div>
                    </div>
                }
            </div>
            <div class="card-footer bg-light py-3">
                <div class="row align-items-center">
                    <div class="col-md-8 text-md-end mb-3 mb-md-0">
                        <span class="text-muted">Total amount:</span>
                    </div>
                    <div class="col-md-4 text-md-end">
                        <span class="fw-bold text-coffee fs-4">@Model.GetTotal().ToString("#,##0") VND</span>
                    </div>
                </div>
            </div>
        </div>

        <div class="d-flex flex-column flex-md-row justify-content-between mt-4 gap-3">
            <div class="d-flex gap-2">
                <a asp-controller="Product" asp-action="Browse" class="btn btn-outline-brown">
                    <i class="bi bi-arrow-left me-2"></i> Continue Shopping
                </a>
                <a asp-controller="ShoppingCart" asp-action="ClearCart" class="btn btn-danger">
                    <i class="bi bi-trash me-2"></i> Delete Cart
                </a>
            </div>
            <a asp-action="Checkout" class="btn btn-brown">
                Proceed to Checkout <i class="bi bi-arrow-right ms-2"></i>
            </a>
        </div>
    }
    else
    {
        <div class="card border-0 shadow-lg">
            <div class="card-body p-5 text-center">
                <div class="mb-4">
                    <i class="bi bi-basket text-coffee" style="font-size: 4rem;"></i>
                </div>
                <h3 class="text-coffee mb-3">Your order is empty!</h3>
                <p class="text-muted mb-4">Looks like you haven't added any items to your order yet.</p>
                <a asp-controller="Product" asp-action="Browse" class="btn btn-brown btn-lg">
                    <i class="bi bi-cup-hot me-2"></i> Browse Our Menu
                </a>
            </div>
        </div>
    }
</div>

<!-- Toast Container for Notifications -->
<div class="toast-container position-fixed bottom-0 end-0 p-3" id="toastContainer"></div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Handle quantity increase
            $('.increase-quantity').click(function() {
                var input = $(this).siblings('.item-quantity');
                var currentValue = parseInt(input.val());
                if (currentValue < 10) {
                    input.val(currentValue + 1);
                    updateQuantity(input);
                }
            });

            // Handle quantity decrease
            $('.decrease-quantity').click(function() {
                var input = $(this).siblings('.item-quantity');
                var currentValue = parseInt(input.val());
                if (currentValue > 1) {
                    input.val(currentValue - 1);
                    updateQuantity(input);
                }
            });

            // Handle direct input change
            $('.item-quantity').change(function() {
                updateQuantity($(this));
            });

            function updateQuantity(input) {
                var productId = input.data('id');
                var options = input.data('options');
                var quantity = parseInt(input.val());

                // Validate quantity
                if (isNaN(quantity) || quantity < 1) {
                    quantity = 1;
                    input.val(1);
                } else if (quantity > 10) {
                    quantity = 10;
                    input.val(10);
                }

                // Show loading toast
                showToast('info', '<i class="bi bi-arrow-repeat me-2"></i> Updating your order...');

                // Send AJAX request to update cart
                $.ajax({
                    url: '@Url.Action("UpdateQuantity", "Order")',
                    type: 'POST',
                    data: {
                        productId: productId,
                        quantity: quantity,
                        selectedOptions: options
                    },
                    success: function(response) {
                        if (response.success) {
                            // Show success toast
                            showToast('success', '<i class="bi bi-check-circle me-2"></i> Order updated successfully!');
                            // Reload the page to update totals
                            setTimeout(function() {
                                location.reload();
                            }, 1000);
                        }
                    },
                    error: function() {
                        // Show error toast
                        showToast('danger', '<i class="bi bi-exclamation-triangle me-2"></i> Failed to update order.');
                    }
                });
            }

            // Function to show toast notification
            function showToast(type, message) {
                var toast = `
                    <div class="toast align-items-center text-white bg-${type} border-0" role="alert" aria-live="assertive" aria-atomic="true">
                        <div class="d-flex">
                            <div class="toast-body">${message}</div>
                            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                        </div>
                    </div>
                `;

                $('#toastContainer').append(toast);
                var toastEl = document.querySelector('.toast:last-child');
                var toastInstance = new bootstrap.Toast(toastEl, { delay: 3000 });
                toastInstance.show();

                // Remove toast from DOM after it's hidden
                $(toastEl).on('hidden.bs.toast', function() {
                    $(this).remove();
                });
            }
        });
    </script>
}