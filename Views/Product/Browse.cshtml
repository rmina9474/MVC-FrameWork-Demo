@model IEnumerable<Reina.MacCredy.Models.Product>
@using Reina.MacCredy.Extensions

@{
    ViewData["Title"] = "Browse Products";
}

<div class="container mt-4">
    <div class="row mb-4">
        <div class="col-md-8">
            <h1 class="display-4 fw-bold text-primary">Our Coffee Collection</h1>
            <p class="lead">Discover our carefully selected premium coffee beans from around the world</p>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-md-8">
            <form asp-action="Browse" method="get" class="d-flex">
                <div class="input-group">
                    <input type="text" name="searchQuery" value="@ViewBag.SearchQuery" class="form-control" placeholder="Search by name, description or category..." aria-label="Search">
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-search"></i> Search
                    </button>
                </div>
            </form>
        </div>
        <div class="col-md-4 text-md-end">
            <div class="btn-group" role="group">
                <a asp-action="Browse" asp-route-sortOrder="asc" asp-route-searchQuery="@ViewBag.SearchQuery"
                   class="btn @(ViewBag.CurrentSort == "asc" ? "btn-primary" : "btn-outline-primary")">
                    <i class="bi bi-sort-numeric-down"></i> Price: Low to High
                </a>
                <a asp-action="Browse" asp-route-sortOrder="desc" asp-route-searchQuery="@ViewBag.SearchQuery"
                   class="btn @(ViewBag.CurrentSort == "desc" ? "btn-primary" : "btn-outline-primary")">
                    <i class="bi bi-sort-numeric-up"></i> Price: High to Low
                </a>
            </div>
        </div>
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-info" role="alert">
            <i class="bi bi-info-circle me-2"></i> No products found. Try a different search term.
        </div>
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
            @foreach (var product in Model)
            {
                <div class="col">
                    <div class="card h-100 shadow-sm border-0 rounded-3 product-card">
                        <div class="position-relative">
                            <img src="@(string.IsNullOrEmpty(product.ImageUrl) ? "/images/placeholder.jpg" : product.ImageUrl)"
                                 class="card-img-top rounded-top-3" alt="@product.Name" style="height: 200px; object-fit: cover;">
                        </div>
                        <div class="card-body">
                            <div class="d-flex justify-content-between mb-2">
                                <h5 class="card-title mb-0 text-truncate">@product.Name</h5>
                                <span class="badge bg-primary rounded-pill">@product.Price.FormatPrice()</span>
                            </div>

                            @if (product.Category != null)
                            {
                                <div class="mb-2">
                                    <span class="badge bg-secondary">@product.Category.Name</span>
                                </div>
                            }

                            <p class="card-text small text-muted mb-3" style="height: 3em; overflow: hidden;">
                                @(product.Description?.Length > 100 ? product.Description.Substring(0, 100) + "..." : product.Description)
                            </p>

                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    @{
                                        var rating = product.Reviews != null && product.Reviews.Any()
                                            ? product.Reviews.Average(r => r.Rating)
                                            : 0;
                                        for (int i = 1; i <= 5; i++)
                                        {
                                            <i class="bi @(i <= rating ? "bi-star-fill text-warning" : "bi-star text-muted")"></i>
                                        }
                                    }
                                    <small class="ms-1 text-muted">
                                        @(product.Reviews?.Count ?? 0) @(product.Reviews?.Count == 1 ? "review" : "reviews")
                                    </small>
                                </div>
                            </div>
                        </div>
                        <div class="card-footer bg-transparent border-top-0 d-flex justify-content-between">
                            <a asp-controller="Product" asp-action="Display" asp-route-id="@product.Id"
                               class="btn btn-sm btn-outline-secondary">
                                <i class="bi bi-eye"></i> Details
                            </a>
                            <button class="btn btn-sm btn-primary add-to-cart-button"
                                    data-id="@product.Id" data-name="@product.Name" data-price="@product.Price">
                                <i class="bi bi-cart-plus"></i> Add to Cart
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

<!-- Toast notification for cart -->
<div class="position-fixed bottom-0 end-0 p-3" style="z-index: 5">
    <div id="cartToast" class="toast align-items-center text-white bg-success" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="d-flex">
            <div class="toast-body">
                <i class="bi bi-check-circle me-2"></i> <span id="cartMessage"></span>
            </div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Add to cart button click handler
            $('.add-to-cart-button').click(function() {
                const productId = $(this).data('id');
                const productName = $(this).data('name');

                // Add product to cart via AJAX (implement this part based on your cart system)
                $.ajax({
                    url: '@Url.Action("AddToCart", "ShoppingCart")',
                    type: 'POST',
                    data: {
                        productId: productId,
                        quantity: 1
                    },
                    success: function() {
                        // Show toast notification
                        $('#cartMessage').text(productName + ' added to your cart!');
                        const toast = new bootstrap.Toast(document.getElementById('cartToast'));
                        toast.show();

                        // Update cart count in navbar (if you have one)
                        // updateCartCount();
                    },
                    error: function() {
                        alert('Failed to add item to cart. Please try again.');
                    }
                });
            });

            // Add hover effect to product cards
            $('.product-card').hover(
                function() { $(this).addClass('shadow'); },
                function() { $(this).removeClass('shadow'); }
            );
        });
    </script>
}