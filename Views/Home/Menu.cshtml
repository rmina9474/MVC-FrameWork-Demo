@model IEnumerable<Reina.MacCredy.Models.Product>
@using Reina.MacCredy.Extensions

@{
    ViewData["Title"] = "Menu";
}

<section class="menu-hero py-5 mb-4 coffee-hero">
    <div class="container">
        <div class="row">
            <div class="col-lg-8 mx-auto text-center">
                <h1 class="display-5 fw-bold text-coffee mb-2">Our Menu</h1>
                <p class="lead mb-0">Discover our handcrafted selection of specialty coffee and more</p>
            </div>
        </div>
    </div>
</section>

<div class="container pb-5">
    <!-- Search and Filter Controls -->
    <div class="menu-controls bg-white rounded-4 shadow-sm p-3 mb-4">
        <div class="row g-3 align-items-center">
            <div class="col-lg-5 col-md-6">
                <!-- Search Form -->
                <form asp-action="Menu" method="get" class="search-form">
                    <div class="input-group">
                        <input type="text" name="searchQuery" class="form-control border-coffee"
                               placeholder="Search our menu..." value="@ViewBag.SearchQuery">
                        <button type="submit" class="btn btn-coffee">
                            <i class="bi bi-search"></i>
                        </button>
                    </div>
                </form>
            </div>
            <div class="col-lg-7 col-md-6">
                <div class="d-flex justify-content-md-end">
                    <!-- Filter Buttons -->
                    <div class="btn-group">
                        <a asp-action="Menu" asp-route-sortOrder="asc" asp-route-searchQuery="@ViewBag.SearchQuery"
                           class="btn @(ViewBag.CurrentSort == "asc" ? "btn-coffee" : "btn-outline-coffee")">
                            <i class="bi bi-sort-numeric-down me-1"></i> Price: Low to High
                        </a>
                        <a asp-action="Menu" asp-route-sortOrder="desc" asp-route-searchQuery="@ViewBag.SearchQuery"
                           class="btn @(ViewBag.CurrentSort == "desc" ? "btn-coffee" : "btn-outline-coffee")">
                            <i class="bi bi-sort-numeric-up me-1"></i> Price: High to Low
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Products Grid -->
    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
        @foreach (var item in Model)
        {
            <div class="col">
                <div class="card h-100 shadow-sm border-0 rounded-3 product-card">
                    <div class="position-relative">
                        <img src="@item.ImageUrl" class="card-img-top rounded-top-3" alt="@item.Name" style="height: 200px; object-fit: cover;">
                        @if (item.Category != null)
                        {
                            <span class="badge bg-primary position-absolute top-0 start-0 m-2">@item.Category.Name</span>
                        }
                    </div>
                    <div class="card-body">
                        <h5 class="card-title mb-2">@item.Name</h5>
                        <div class="product-rating mb-2">
                            @{
                                double avgRating = item.Reviews != null && item.Reviews.Any()
                                    ? Math.Round(item.Reviews.Average(r => r.Rating), 1)
                                    : 0;
                                int ratingCount = item.Reviews != null ? item.Reviews.Count : 0;
                            }
                            @for (int i = 1; i <= 5; i++)
                            {
                                if (i <= Math.Floor(avgRating))
                                {
                                    <i class="bi bi-star-fill text-warning"></i>
                                }
                                else if (i - avgRating > 0 && i - avgRating < 1)
                                {
                                    <i class="bi bi-star-half text-warning"></i>
                                }
                                else
                                {
                                    <i class="bi bi-star text-warning"></i>
                                }
                            }
                            <span class="ms-1 text-muted small">(@ratingCount)</span>
                        </div>
                        <p class="card-text text-muted mb-3">@(item.Description?.Length > 100 ? item.Description.Substring(0, 100) + "..." : item.Description)</p>
                        <div class="d-flex flex-column">
                            <div class="price-section mb-3">
                                <span class="fw-bold fs-5">@item.Price.FormatPrice()</span>
                            </div>
                            <div class="button-group d-flex">
                                <a asp-controller="Product" asp-action="Display" asp-route-id="@item.Id" class="btn btn-outline-coffee me-2 flex-grow-1">Details</a>
                                <button class="btn btn-coffee flex-grow-1 add-to-cart-btn" data-product-id="@item.Id" data-quantity="1">Order</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Quick View Modal -->
            <div class="modal fade" id="quickViewModal-@item.Id" tabindex="-1" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered modal-lg">
                    <div class="modal-content border-0 rounded-4 overflow-hidden">
                        <div class="modal-header border-0 bg-coffee-cream">
                            <h5 class="modal-title text-coffee">@item.Name</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body p-0">
                            <div class="row g-0">
                                <div class="col-md-5">
                                    <img src="@item.ImageUrl" class="img-fluid h-100 object-cover" alt="@item.Name">
                                </div>
                                <div class="col-md-7 p-4">
                                    <!-- Rating in Modal -->
                                    <div class="mb-3">
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            if (i <= Math.Floor(avgRating))
                                            {
                                                <i class="bi bi-star-fill text-warning"></i>
                                            }
                                            else if (i - avgRating > 0 && i - avgRating < 1)
                                            {
                                                <i class="bi bi-star-half text-warning"></i>
                                            }
                                            else
                                            {
                                                <i class="bi bi-star text-warning"></i>
                                            }
                                        }
                                        <span class="ms-1 text-muted">@avgRating.ToString("0.0") (@ratingCount @(ratingCount == 1 ? "review" : "reviews"))</span>
                                    </div>
                                    <span class="fw-bold fs-5">@item.Price.FormatPrice()</span>
                                    <p class="mb-4">@(item.Description ?? "No description available")</p>
                                    <div class="d-flex flex-column flex-sm-row align-items-start align-items-sm-center gap-3 mb-4">
                                        <div class="quantity-control d-flex align-items-center mb-3 mb-sm-0">
                                            <button class="quantity-btn decrease-btn btn btn-outline-coffee" data-product-id="@item.Id">-</button>
                                            <input type="number" value="1" min="1" class="quantity-input form-control mx-2 text-center" style="width: 60px;" id="modal-quantity-@item.Id">
                                            <button class="quantity-btn increase-btn btn btn-outline-coffee" data-product-id="@item.Id">+</button>
                                        </div>
                                        <button class="btn btn-coffee modal-add-to-cart" data-product-id="@item.Id">
                                            <i class="bi bi-cart-plus me-2"></i> Order
                                        </button>
                                    </div>
                                    <a asp-controller="Product" asp-action="Display" asp-route-id="@item.Id" class="btn btn-outline-coffee w-100">
                                        <i class="bi bi-info-circle me-2"></i> View Full Details
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    @if (!Model.Any())
    {
        <div class="text-center py-5">
            <i class="bi bi-search fs-1 text-coffee-light"></i>
            <h3 class="mt-3 text-coffee">No products found</h3>
            <p class="text-muted">Try a different search term or browse all our products</p>
            <a asp-action="Menu" class="btn btn-coffee mt-3">View All Products</a>
        </div>
    }
</div>

<div class="toast-container position-fixed bottom-0 end-0 p-3">
    <div id="cartToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header bg-coffee text-white">
            <i class="bi bi-cart-check me-2"></i>
            <strong class="me-auto">Order</strong>
            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body">
            <p id="cartToastMessage">Product added to order!</p>
            <div class="mt-2 pt-2 border-top">
                <a asp-controller="ShoppingCart" asp-action="Index" class="btn btn-coffee btn-sm">View Order</a>
                <button type="button" class="btn btn-secondary btn-sm" data-bs-dismiss="toast">Continue Shopping</button>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        /* Menu Page Custom Styles */
        .menu-hero {
            background-color: var(--coffee-cream);
            position: relative;
            overflow: hidden;
        }

        .menu-hero::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-image: url('/images/coffee-beans-pattern.png');
            background-size: 200px;
            opacity: 0.08;
            z-index: 0;
        }

        .menu-controls {
            transition: all 0.3s ease;
            border: 1px solid rgba(var(--coffee-cream-rgb), 0.3);
        }

        .border-coffee {
            border-color: var(--coffee-medium);
        }

        .border-coffee:focus {
            box-shadow: 0 0 0 0.25rem rgba(var(--coffee-medium), 0.25);
            border-color: var(--coffee-medium);
        }

        .btn-coffee {
            background-color: var(--coffee-medium);
            border-color: var(--coffee-medium);
            color: white;
        }

        .btn-coffee:hover, .btn-coffee:focus {
            background-color: var(--coffee-dark);
            border-color: var(--coffee-dark);
            color: white;
        }

        .btn-outline-coffee {
            border-color: var(--coffee-medium);
            color: var(--coffee-medium);
        }

        .btn-outline-coffee:hover, .btn-outline-coffee:focus {
            background-color: var(--coffee-medium);
            color: white;
        }

        .bg-coffee {
            background-color: var(--coffee-medium);
        }

        .bg-coffee-light {
            background-color: var(--coffee-light);
            color: white;
        }

        .text-coffee {
            color: var(--coffee-dark);
        }

        .text-coffee-medium {
            color: var(--coffee-medium);
        }

        /* Menu Card Styles */
        .menu-card {
            background-color: white;
            overflow: hidden;
            border: none;
            transition: all 0.3s ease;
        }

        .shadow-hover {
            transition: all 0.3s ease;
        }

        .shadow-hover:hover {
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15) !important;
            transform: translateY(-5px);
        }

        .menu-card-image {
            position: relative;
            height: 220px;
            overflow: hidden;
        }

        .menu-card-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.5s ease;
        }

        .menu-card:hover .menu-card-image img {
            transform: scale(1.05);
        }

        .menu-card-badge {
            position: absolute;
            top: 10px;
            left: 10px;
            z-index: 2;
        }

        .menu-card-actions {
            position: absolute;
            top: 10px;
            right: 10px;
            display: flex;
            flex-direction: column;
            gap: 10px;
            opacity: 0;
            transform: translateX(20px);
            transition: all 0.3s ease;
        }

        .menu-card:hover .menu-card-actions {
            opacity: 1;
            transform: translateX(0);
        }

        .action-btn {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background-color: white;
            color: var(--coffee-dark);
            border: none;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.15);
            transition: all 0.3s ease;
        }

        .action-btn:hover {
            background-color: var(--coffee-medium);
            color: white;
            transform: scale(1.1);
        }

        .menu-card-body {
            padding: 1.25rem;
        }

        .menu-card-title {
            font-size: 1.25rem;
            font-weight: 600;
            color: var(--coffee-dark);
            margin-bottom: 0.5rem;
            display: -webkit-box;
            -webkit-line-clamp: 1;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }

        .menu-card-description {
            color: #666;
            margin-bottom: 1rem;
            font-size: 0.875rem;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
            height: 2.8rem;
        }

        .menu-card-footer {
            display: flex;
            flex-direction: column;
            gap: 0.75rem;
        }

        .menu-card-price {
            font-size: 1.25rem;
            font-weight: 700;
            color: var(--coffee-medium);
        }

        .menu-card-actions-bottom {
            display: flex;
            justify-content: space-between;
        }

        .menu-card-actions-bottom .btn {
            flex: 1;
        }

        .menu-card-actions-bottom .btn:first-child {
            margin-right: 0.5rem;
        }

        /* Modal Styles */
        .object-cover {
            object-fit: cover;
        }

        /* Quantity Controls */
        .quantity-input::-webkit-outer-spin-button,
        .quantity-input::-webkit-inner-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }

        @@media (max-width: 767.98px) {
            .menu-card-actions-bottom {
                flex-direction: column;
                gap: 0.5rem;
            }

            .menu-card-actions-bottom .btn:first-child {
                margin-right: 0;
            }
        }
    </style>
}

@section Scripts {
    <script>
        $(document).ready(function() {
            // Add to cart button click event
            $('.add-to-cart-btn').click(function() {
                var productId = $(this).data('product-id');
                var quantity = $(this).data('quantity');
                addToCart(productId, quantity);
            });

            // Modal add to cart button click event
            $('.modal-add-to-cart').click(function() {
                var productId = $(this).data('product-id');
                var quantity = $('#modal-quantity-' + productId).val();
                addToCart(productId, quantity);
                $('#quickViewModal-' + productId).modal('hide');
            });

            // Quantity buttons in modal
            $('.decrease-btn').click(function() {
                var productId = $(this).data('product-id');
                var inputField = $('#modal-quantity-' + productId);
                var value = parseInt(inputField.val()) - 1;
                inputField.val(value < 1 ? 1 : value);
            });

            $('.increase-btn').click(function() {
                var productId = $(this).data('product-id');
                var inputField = $('#modal-quantity-' + productId);
                inputField.val(parseInt(inputField.val()) + 1);
            });

            function addToCart(productId, quantity) {
                $.ajax({
                    url: '@Url.Action("AddToCart", "ShoppingCart")',
                    type: 'POST',
                    data: { productId: productId, quantity: quantity },
                    success: function(response) {
                        if (response.success) {
                            // Show toast notification
                            var toast = new bootstrap.Toast(document.getElementById('cartToast'));
                            toast.show();

                            // Update cart count in navbar
                            updateCartCount();
                        }
                    }
                });
            }

            function updateCartCount() {
                $.ajax({
                    url: '@Url.Action("GetCartCount", "ShoppingCart")',
                    type: 'GET',
                    success: function(response) {
                        $('.cart-count').text(response);
                    }
                });
            }

            // Initialize cart count
            updateCartCount();
        });
    </script>
}