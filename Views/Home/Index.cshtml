@model Reina.MacCredy.Models.HomeViewModel
@using Microsoft.EntityFrameworkCore
@using Reina.MacCredy.Extensions

@{
    ViewData["Title"] = "Home";
    int numOfQuantity = 1;
}

<!-- Modern Hero Section with Direct Order CTA -->
<section class="hero-section py-5 mb-5 coffee-hero">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-lg-6 text-center text-lg-start mb-4 mb-lg-0">
                <img src="~/images/coffee-logo.png" alt="Brew Haven Logo" class="img-fluid mb-4" style="max-width: 200px;">
                <h1 class="display-4 fw-bold text-coffee">Crafting Perfect <span class="text-brown">Moments</span></h1>
                <p class="lead">Experience the art of specialty coffee in every cup we serve</p>
                <div class="mt-4 d-flex flex-column flex-sm-row gap-3">
                    <a asp-controller="Product" asp-action="Browse" class="btn btn-brown btn-lg rounded-pill">
                        <i class="bi bi-cup-hot me-2"></i> Explore Our Menu
                    </a>
                    <a href="#quick-order" class="btn btn-outline-brown btn-lg rounded-pill">
                        <i class="bi bi-lightning-fill me-2"></i> Quick Order
                    </a>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="card border-0 shadow-lg overflow-hidden">
                    <div id="hero-carousel" class="carousel slide" data-bs-ride="carousel">
                        <div class="carousel-inner">
                            @{
                                var featured = Model.FeaturedProducts.Take(3).ToList();
                                for (int i = 0; i < featured.Count; i++)
                                {
                                    <div class="carousel-item @(i == 0 ? "active" : "")">
                                        <img src="@featured[i].ImageUrl" class="d-block w-100" alt="@featured[i].Name"
                                             style="height: 300px; object-fit: cover;">
                                        <div class="carousel-caption d-none d-md-block bg-dark bg-opacity-50 rounded p-2">
                                            <h5>@featured[i].Name</h5>
                                            <p class="mb-0">@featured[i].Price.FormatPrice()</p>
                                            <button class="btn btn-sm btn-brown mt-2 quick-add-btn" data-product-id="@featured[i].Id" data-quantity="1">
                                                <i class="bi bi-cart-plus"></i> Order
                                            </button>
                                        </div>
                                    </div>
                                }
                            }
                        </div>
                        <button class="carousel-control-prev" type="button" data-bs-target="#hero-carousel" data-bs-slide="prev">
                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Previous</span>
                        </button>
                        <button class="carousel-control-next" type="button" data-bs-target="#hero-carousel" data-bs-slide="next">
                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Next</span>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Coffee Features Section with Hover Effects -->
<section class="features-section py-5 mb-5 bg-light rounded">
    <div class="container">
        <div class="row g-4">
            <div class="col-md-3">
                <div class="feature-card text-center p-4 h-100 shadow-sm hover-card">
                    <div class="feature-icon mb-3">
                        <i class="bi bi-cup-hot fs-1 text-brown"></i>
                    </div>
                    <h5>Specialty Coffee</h5>
                    <p class="text-muted small mb-0">Ethically sourced from premium farms</p>
                </div>
            </div>
            <div class="col-md-3">
                <div class="feature-card text-center p-4 h-100 shadow-sm hover-card">
                    <div class="feature-icon mb-3">
                        <i class="bi bi-clock fs-1 text-brown"></i>
                    </div>
                    <h5>Fresh Daily</h5>
                    <p class="text-muted small mb-0">Freshly roasted beans daily</p>
                </div>
            </div>
            <div class="col-md-3">
                <div class="feature-card text-center p-4 h-100 shadow-sm hover-card">
                    <div class="feature-icon mb-3">
                        <i class="bi bi-people fs-1 text-brown"></i>
                    </div>
                    <h5>Expert Baristas</h5>
                    <p class="text-muted small mb-0">Skilled in the art of coffee</p>
                </div>
            </div>
            <div class="col-md-3">
                <div class="feature-card text-center p-4 h-100 shadow-sm hover-card">
                    <div class="feature-icon mb-3">
                        <i class="bi bi-heart fs-1 text-brown"></i>
                    </div>
                    <h5>Made With Love</h5>
                    <p class="text-muted small mb-0">Every cup crafted with passion</p>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Quick Order Section -->
<section id="quick-order" class="quick-order-section py-5 mb-5">
    <div class="container">
        <div class="text-center mb-5">
            <h2 class="section-title position-relative pb-3 text-coffee">Quick Order</h2>
            <p class="text-muted">Our most popular items ready for you to enjoy</p>
        </div>

        <div class="row g-4">
            @foreach (var item in Model.FeaturedProducts.Take(4))
            {
                <div class="col-12 col-md-6 col-lg-3">
                    <div class="quick-order-card card h-100 border-0 shadow-sm">
                        <div class="position-relative">
                            <img src="@item.ImageUrl" class="card-img-top" alt="@item.Name" style="height: 180px; object-fit: cover;">
                            @if (item.IsAvailable)
                            {
                                <span class="badge bg-success position-absolute top-0 end-0 m-2">Available</span>
                            }
                            else
                            {
                                <span class="badge bg-danger position-absolute top-0 end-0 m-2">Sold Out</span>
                            }
                        </div>
                        <div class="card-body">
                            <h5 class="card-title">@item.Name</h5>
                            <p class="card-text text-truncate-2">@(item.Description ?? "Rich, aromatic coffee blend")</p>
                            <div class="d-flex justify-content-between align-items-center">
                                <span class="fw-bold fs-5">@item.Price.FormatPrice()</span>
                                <div class="input-group input-group-sm w-50">
                                    <button class="btn btn-outline-secondary quantity-btn" type="button" data-action="decrease" data-product-id="@item.Id">-</button>
                                    <input type="number" class="form-control text-center quick-quantity" value="1" min="1" max="10" id="quantity-@item.Id">
                                    <button class="btn btn-outline-secondary quantity-btn" type="button" data-action="increase" data-product-id="@item.Id">+</button>
                                </div>
                            </div>
                        </div>
                        <div class="card-footer bg-transparent border-0 pt-0">
                            <button class="btn btn-brown w-100 quick-add-to-cart" data-product-id="@item.Id">
                                <i class="bi bi-cart-plus me-2"></i> Order
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>

        <div class="text-center mt-4">
            <a asp-controller="Product" asp-action="Browse" class="btn btn-outline-brown rounded-pill">
                <i class="bi bi-grid-3x3-gap me-2"></i> View All Products
            </a>
        </div>
    </div>
</section>

<!-- Featured Coffee Section with Modern Cards -->
<section class="products-section py-5 mb-5">
    <div class="container">
        <div class="text-center mb-5">
            <h2 class="section-title position-relative pb-3 text-coffee">Featured Coffee</h2>
            <p class="text-muted">Discover our handcrafted selection of signature coffee blends</p>
        </div>

        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
            @foreach (var item in Model.AllProducts.Take(6))
            {
                double avgRating = item.Reviews != null && item.Reviews.Any()
                    ? Math.Round(item.Reviews.Average(r => r.Rating), 1)
                    : 0;
                int ratingCount = item.Reviews != null ? item.Reviews.Count : 0;

                string productDescription = !string.IsNullOrEmpty(item.Description)
                    ? item.Description
                    : "Rich, aromatic coffee blend";

                <div class="col d-flex">
                    <div class="product-card coffee-card">
                        <div class="product-image-wrapper">
                            <img src="@item.ImageUrl" class="product-image" alt="@item.Name">
                            <div class="product-actions-overlay">
                                <button class="btn-icon quick-view-btn" data-bs-toggle="modal" data-bs-target="#quickViewModal-@item.Id">
                                    <i class="bi bi-eye-fill fs-4"></i>
                                </button>
                                <button class="btn-icon add-to-cart-btn-overlay" data-product-id="@item.Id" data-quantity="1">
                                    <i class="bi bi-cart-plus"></i>
                                </button>
                            </div>
                        </div>
                        <div class="product-card-body">
                            <h3 class="product-name text-truncate-2">@item.Name</h3>

                            <!-- Product Rating -->
                            <div class="product-rating mb-2">
                                @for (int i = 1; i <= 5; i++)
                                {
                                    if (i <= Math.Floor(avgRating))
                                    {
                                        <i class="bi bi-star-fill text-warning"></i>
                                    }
                                    else if (i - avgRating > 0 && i - avgRating < 1)
                                    {
                                        <i class="bi bi-star-half text-warning"></i>
                                    }
                                    else
                                    {
                                        <i class="bi bi-star text-warning"></i>
                                    }
                                }
                                <span class="ms-1 text-muted small">(@ratingCount)</span>
                            </div>

                            <!-- Short description -->
                            <p class="product-description text-truncate-2">
                                @productDescription
                            </p>

                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <div class="product-price">@item.Price.FormatPrice()</div>
                                @if (item.PrepTime != null && !string.IsNullOrEmpty(item.PrepTime.ToString()))
                                {
                                    <div class="prep-time small text-muted">
                                        <i class="bi bi-clock me-1"></i> @item.PrepTime
                                    </div>
                                }
                            </div>

                            <div class="product-actions">
                                <a asp-controller="Product" asp-action="Display" asp-route-id="@item.Id" class="btn btn-outline-brown btn-sm me-2">
                                    <i class="bi bi-info-circle"></i> Details
                                </a>
                                <button class="btn btn-brown add-to-cart-btn" data-product-id="@item.Id" data-quantity="@numOfQuantity">
                                    <i class="bi bi-cart-plus"></i> Order
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Quick View Modal -->
                <div class="modal fade" id="quickViewModal-@item.Id" tabindex="-1" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered modal-lg">
                        <div class="modal-content">
                            <div class="modal-header border-0">
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body p-4">
                                <div class="row g-3">
                                    <div class="col-md-6 mb-4 mb-md-0">
                                        <img src="@item.ImageUrl" class="img-fluid rounded-3" alt="@item.Name">
                                    </div>
                                    <div class="col-md-6">
                                        <h3 class="mb-3">@item.Name</h3>
                                        <!-- Rating in Modal -->
                                        <div class="mb-2">
                                            @for (int i = 1; i <= 5; i++)
                                            {
                                                if (i <= Math.Floor(avgRating))
                                                {
                                                    <i class="bi bi-star-fill text-warning"></i>
                                                }
                                                else if (i - avgRating > 0 && i - avgRating < 1)
                                                {
                                                    <i class="bi bi-star-half text-warning"></i>
                                                }
                                                else
                                                {
                                                    <i class="bi bi-star text-warning"></i>
                                                }
                                            }
                                            <span class="ms-1 text-muted">@avgRating.ToString("0.0") (@ratingCount @(ratingCount == 1 ? "review" : "reviews"))</span>
                                        </div>
                                        <div class="fs-4 text-primary fw-bold mb-4">@item.Price.FormatPrice()</div>

                                        <!-- Product Details -->
                                        <p class="mb-4">@(item.Description ?? "No description available")</p>

                                        <div class="d-flex flex-column flex-sm-row align-items-start align-items-sm-center gap-3 mb-4">
                                            <div class="quantity-control d-flex align-items-center mb-3 mb-sm-0">
                                                <button class="btn btn-sm btn-outline-secondary quantity-btn" data-action="decrease">-</button>
                                                <input type="number" class="form-control form-control-sm mx-2 text-center quantity-input" value="1" min="1" max="10" style="width: 60px;">
                                                <button class="btn btn-sm btn-outline-secondary quantity-btn" data-action="increase">+</button>
                                            </div>
                                            <button class="btn btn-brown add-to-cart-btn" data-product-id="@item.Id" data-quantity="1">
                                                <i class="bi bi-cart-plus me-2"></i> Order
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</section>

<!-- Coffee Story Section (New) -->
<section class="story-section py-5 mb-5 bg-light">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-lg-6 mb-4 mb-lg-0">
                <div class="rounded overflow-hidden">
                    <img src="~/images/coffee-beans.jpg" alt="Coffee Beans" class="img-fluid">
                </div>
            </div>
            <div class="col-lg-6">
                <h2 class="text-coffee mb-4">Our Coffee Story</h2>
                <p class="lead mb-4">At Brew Haven, we believe that great coffee starts with sourcing the finest beans from sustainable farms across the globe.</p>
                <p class="mb-4">Every bean is carefully selected, expertly roasted, and prepared with precision to bring you a perfect cup of coffee every time. Our baristas are passionate about their craft and dedicated to providing you with an exceptional coffee experience.</p>
                <a href="#" class="btn btn-outline-brown rounded-pill">Learn More About Our Coffee</a>
            </div>
        </div>
    </div>
</section>

<!-- Toast Container for Notifications -->
<div class="toast-container position-fixed bottom-0 end-0 p-3" id="toastContainer"></div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Add to cart button click event
            $('.add-to-cart-btn, .add-to-cart-btn-overlay, .quick-add-btn').click(function() {
                var productId = $(this).data('product-id');
                var quantity = $(this).data('quantity');
                // If clicked from modal, get the quantity from the input
                if ($(this).closest('.modal').length > 0) {
                    quantity = $(this).closest('.modal').find('.quantity-input').val();
                }
                addToCart(productId, quantity);
            });

            // Quick order add to cart
            $('.quick-add-to-cart').click(function() {
                var productId = $(this).data('product-id');
                var quantity = $('#quantity-' + productId).val();
                addToCart(productId, quantity);
            });

            // Quantity buttons in modals
            $('.quantity-btn').click(function() {
                var action = $(this).data('action');

                // If in modal
                if ($(this).closest('.modal').length > 0) {
                    var input = $(this).parent().find('.quantity-input');
                    var value = parseInt(input.val());
                    if (action === 'increase' && value < 10) {
                        input.val(value + 1);
                    } else if (action === 'decrease' && value > 1) {
                        input.val(value - 1);
                    }
                    // Update the data-quantity attribute of the add to cart button
                    $(this).closest('.modal-body').find('.add-to-cart-btn').data('quantity', input.val());
                }
                // If in quick order section
                else {
                    var productId = $(this).data('product-id');
                    var input = $('#quantity-' + productId);
                    var value = parseInt(input.val());
                    if (action === 'increase' && value < 10) {
                        input.val(value + 1);
                    } else if (action === 'decrease' && value > 1) {
                        input.val(value - 1);
                    }
                }
            });

            // Function to add items to cart
            function addToCart(productId, quantity) {
                // Add to cart via AJAX
                $.ajax({
                    url: '/ShoppingCart/AddToCart',
                    type: 'POST',
                    data: {
                        productId: productId,
                        quantity: quantity
                    },
                    success: function(response) {
                        // Update cart count
                        $('.cart-count').text(response.cartCount);

                        // Show success toast
                        showToast('success', '<i class="bi bi-check-circle me-2"></i> Item added to order!');

                        // Close modal if open
                        $('.modal').modal('hide');

                        // Add animation to cart icon
                        $('.cart-icon').addClass('pulse');
                        setTimeout(function() {
                            $('.cart-icon').removeClass('pulse');
                        }, 700);
                    },
                    error: function() {
                        // Show error toast
                        showToast('danger', '<i class="bi bi-exclamation-circle me-2"></i> Failed to add item to order.');
                    }
                });
            }

            // Function to show toast notification
            function showToast(type, message) {
                var toast = `
                    <div class="toast align-items-center text-white bg-${type} border-0" role="alert" aria-live="assertive" aria-atomic="true">
                        <div class="d-flex">
                            <div class="toast-body">${message}</div>
                            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                        </div>
                    </div>
                `;

                $('#toastContainer').append(toast);
                var toastEl = document.querySelector('.toast:last-child');
                var toastInstance = new bootstrap.Toast(toastEl, { delay: 3000 });
                toastInstance.show();

                // Remove toast from DOM after it's hidden
                $(toastEl).on('hidden.bs.toast', function() {
                    $(this).remove();
                });
            }
        });
    </script>
}

<style>
    /* Add extra styling for modern look */
    .hover-card {
        transition: all 0.3s ease;
        border-radius: 12px;
        border: 1px solid transparent;
        background-color: white;
    }

    .hover-card:hover {
        transform: translateY(-5px);
        border-color: var(--coffee-accent);
        box-shadow: 0 10px 20px rgba(0,0,0,0.1) !important;
    }

    .text-brown {
        color: var(--coffee-medium);
    }

    .text-coffee {
        color: var(--coffee-dark);
    }

    .section-title::after {
        content: '';
        display: block;
        width: 80px;
        height: 3px;
        background-color: var(--coffee-accent);
        margin: 0.5rem auto 0;
    }

    .btn-icon {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background-color: white;
        color: var(--coffee-medium);
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 5px;
        transition: all 0.3s ease;
        border: none;
    }

    .btn-icon:hover {
        background-color: var(--coffee-medium);
        color: white;
        transform: scale(1.1);
    }

    .product-actions-overlay {
        display: flex;
        flex-direction: row;
    }

    /* Quick Order Card Styles */
    .quick-order-card {
        transition: all 0.3s ease;
        border-radius: 12px;
        overflow: hidden;
    }

    .quick-order-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 20px rgba(0,0,0,0.1) !important;
    }

    /* Animation for cart icon */
    @@keyframes pulse {
        0% { transform: scale(1); }
        50% { transform: scale(1.2); }
        100% { transform: scale(1); }
    }

    .pulse {
        animation: pulse 0.7s ease;
    }
</style>

<section class="service-features">
    <div class="container">
        <div class="row g-4">
            <div class="col-md-4">
                <div class="service-card">
                    <div class="service-icon">
                        <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" fill="none" viewBox="0 0 24 24" stroke="#8b5a2b" stroke-width="1.5">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M12 6v6h4.5m4.5 0a9 9 0 11-18 0 9 9 0 0118 0z" />
                        </svg>
                    </div>
                    <h3 class="service-title">Fresh Daily</h3>
                    <p class="service-desc">Freshly roasted beans daily for the perfect cup every time. We source our beans directly from farmers.</p>
                    <a href="/Product" class="service-link">Shop Fresh Coffee</a>
                </div>
            </div>
            <div class="col-md-4">
                <div class="service-card">
                    <div class="service-icon">
                        <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" fill="none" viewBox="0 0 24 24" stroke="#8b5a2b" stroke-width="1.5">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 6a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0zM4.501 20.118a7.5 7.5 0 0114.998 0A17.933 17.933 0 0112 21.75c-2.676 0-5.216-.584-7.499-1.632z" />
                        </svg>
                    </div>
                    <h3 class="service-title">Expert Baristas</h3>
                    <p class="service-desc">Skilled in the art of coffee, our baristas ensure every blend delivers exceptional flavor and aroma.</p>
                    <a href="/Home/About" class="service-link">Meet Our Team</a>
                </div>
            </div>
            <div class="col-md-4">
                <div class="service-card">
                    <div class="service-icon">
                        <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" fill="none" viewBox="0 0 24 24" stroke="#8b5a2b" stroke-width="1.5">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M21 8.25c0-2.485-2.099-4.5-4.688-4.5-1.935 0-3.597 1.126-4.312 2.733-.715-1.607-2.377-2.733-4.313-2.733C5.1 3.75 3 5.765 3 8.25c0 7.22 9 12 9 12s9-4.78 9-12z" />
                        </svg>
                    </div>
                    <h3 class="service-title">Made With Love</h3>
                    <p class="service-desc">Every cup crafted with passion and care. We believe coffee is more than a drink—it's an experience.</p>
                    <a href="/Product/Specials" class="service-link">Try Our Specials</a>
                </div>
            </div>
        </div>
    </div>
</section>

<style>
    .service-features {
        padding: 60px 0;
        background-color: #f9f5f0;
    }

    .service-card {
        background-color: #fff;
        border-radius: 16px;
        padding: 30px;
        height: 100%;
        box-shadow: 0 10px 30px rgba(111, 78, 55, 0.07);
        transition: all 0.3s ease;
        text-align: center;
    }

    .service-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 15px 35px rgba(111, 78, 55, 0.1);
    }

    .service-icon {
        width: 80px;
        height: 80px;
        background-color: #f8f1e9;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto 20px;
    }

    .service-title {
        color: #6f4e37;
        font-size: 22px;
        font-weight: 700;
        margin-bottom: 15px;
    }

    .service-desc {
        color: #6c757d;
        font-size: 16px;
        line-height: 1.6;
        margin-bottom: 20px;
    }

    .service-link {
        display: inline-block;
        color: #8b5a2b;
        font-weight: 600;
        text-decoration: none;
        padding-bottom: 3px;
        border-bottom: 2px solid transparent;
        transition: all 0.2s ease;
    }

    .service-link:hover {
        border-bottom-color: #8b5a2b;
    }
</style>



